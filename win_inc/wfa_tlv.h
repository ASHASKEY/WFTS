/****************************************************************************
*
* Copyright (c) 2014 Wi-Fi Alliance
*
* Permission to use, copy, modify, and/or distribute this software for any
* purpose with or without fee is hereby granted, provided that the above
* copyright notice and this permission notice appear in all copies.
*
* THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
* WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
* MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
* SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER
* RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
* NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE
* USE OR PERFORMANCE OF THIS SOFTWARE.
*
*****************************************************************************/


/*
* File: wfa_tlv.h
*  definitions for each of command types. 
*  format:
*  ---------------------------------------------------
*  |  tag   | length |   value   
*  --------------------------------------------------- 
*   2 bytes   2bytes    defined by length 
*/
#ifndef _WFA_TLV_H
#define _WFA_TLV_H

#include "wfa_types.h"

#define INTEGER_1 0x0001            /* byte */
#define INTEGER_2 0x0002            /* word */
#define OCTET_STRING 0x0003         /* string */

typedef struct _wfatlvHdr 
{
	WORD tag;   /* tag/type */
	WORD len;   /* value length */
} wfaTLV;

#define WFA_TLV_HDR_LEN sizeof(wfaTLV)
/* Commands================================================================== */
#define WFA_GET_VERSION_TLV                                         0x01

/* Generic TRAFFIC GENERATOR Commands */
#define WFA_TRAFFIC_SEND_PING_TLV			(WFA_GET_VERSION_TLV + 0x01) 
#define WFA_TRAFFIC_STOP_PING_TLV			(WFA_TRAFFIC_SEND_PING_TLV + 0x01)
#define WFA_TRAFFIC_AGENT_CONFIG_TLV		(WFA_TRAFFIC_STOP_PING_TLV + 0x01)
#define WFA_TRAFFIC_AGENT_SEND_TLV			(WFA_TRAFFIC_AGENT_CONFIG_TLV + 0x01)
#define WFA_TRAFFIC_AGENT_RECV_START_TLV	(WFA_TRAFFIC_AGENT_SEND_TLV + 0x01)
#define WFA_TRAFFIC_AGENT_RECV_STOP_TLV		(WFA_TRAFFIC_AGENT_RECV_START_TLV + 0x01)
#define WFA_TRAFFIC_AGENT_RESET_TLV			(WFA_TRAFFIC_AGENT_RECV_STOP_TLV + 0x01)
#define WFA_TRAFFIC_AGENT_STATUS_TLV		(WFA_TRAFFIC_AGENT_RESET_TLV + 0x01) /* 9 */

/* STATION/DUT Commands */
#define WFA_STA_GET_IP_CONFIG_TLV    (WFA_TRAFFIC_AGENT_STATUS_TLV + 0x01)
#define WFA_STA_SET_IP_CONFIG_TLV    (WFA_STA_GET_IP_CONFIG_TLV + 0x01)
#define WFA_STA_GET_MAC_ADDRESS_TLV  (WFA_STA_SET_IP_CONFIG_TLV + 0x01)
#define WFA_STA_SET_MAC_ADDRESS_TLV  (WFA_STA_GET_MAC_ADDRESS_TLV + 0x01) 
#define WFA_STA_IS_CONNECTED_TLV     (WFA_STA_SET_MAC_ADDRESS_TLV + 0x01) 
#define WFA_STA_VERIFY_IP_CONNECTION_TLV  (WFA_STA_IS_CONNECTED_TLV + 0x01)
#define WFA_STA_GET_BSSID_TLV        (WFA_STA_VERIFY_IP_CONNECTION_TLV + 0x01)
#define WFA_STA_GET_STATS_TLV        (WFA_STA_GET_BSSID_TLV + 0x01)  /* 17 */ 
#define WFA_STA_SET_ENCRYPTION_TLV   (WFA_STA_GET_STATS_TLV + 0x01)
#define WFA_STA_SET_PSK_TLV          (WFA_STA_SET_ENCRYPTION_TLV + 0x01)
#define WFA_STA_SET_EAPTLS_TLV       (WFA_STA_SET_PSK_TLV + 0x01)
#define WFA_STA_SET_UAPSD_TLV        (WFA_STA_SET_EAPTLS_TLV + 0x01)
#define WFA_STA_ASSOCIATE_TLV        (WFA_STA_SET_UAPSD_TLV + 0x01)
#define WFA_STA_SET_EAPTTLS_TLV      (WFA_STA_ASSOCIATE_TLV + 0x01)
#define WFA_STA_SET_EAPSIM_TLV       (WFA_STA_SET_EAPTTLS_TLV + 0x01)
#define WFA_STA_SET_PEAP_TLV         (WFA_STA_SET_EAPSIM_TLV + 0x01)
#define WFA_STA_SET_IBSS_TLV         (WFA_STA_SET_PEAP_TLV + 0x01)
#define WFA_STA_GET_INFO_TLV         (WFA_STA_SET_IBSS_TLV + 0x01)
#define WFA_DEVICE_GET_INFO_TLV      (WFA_STA_GET_INFO_TLV + 0x01)  
#define WFA_DEVICE_LIST_IF_TLV       (WFA_DEVICE_GET_INFO_TLV + 0x01)  /* 29 */
#define WFA_STA_DEBUG_SET_TLV        (WFA_DEVICE_LIST_IF_TLV + 0x01)  /* 30 */
#define WFA_STA_SET_MODE_TLV         (WFA_STA_DEBUG_SET_TLV + 0x01) /* 31 */
#define WFA_STA_UPLOAD_TLV           (WFA_STA_SET_MODE_TLV + 0x01)  /* 32 */
#define WFA_STA_SET_WMM_TLV          (WFA_STA_UPLOAD_TLV + 0x01) /* 33 */
#define WFA_STA_COMMANDS_END		 (WFA_STA_SET_WMM_TLV + 0x01) /* 34 */


/* Version response .........................................................*/
#define WFA_GET_VERSION_RESP_TLV  (WFA_STA_COMMANDS_END +       0x01) /* 35 */

/* Generic Traffic Generator Responses */
#define WFA_TRAFFIC_SEND_PING_RESP_TLV			(WFA_GET_VERSION_RESP_TLV +  0x01) 
#define WFA_TRAFFIC_STOP_PING_RESP_TLV			(WFA_TRAFFIC_SEND_PING_RESP_TLV + 0x01)
#define WFA_TRAFFIC_AGENT_CONFIG_RESP_TLV		(WFA_TRAFFIC_STOP_PING_RESP_TLV + 0x01)
#define WFA_TRAFFIC_AGENT_SEND_RESP_TLV			(WFA_TRAFFIC_AGENT_CONFIG_RESP_TLV + 0x01)
#define WFA_TRAFFIC_AGENT_RECV_START_RESP_TLV	(WFA_TRAFFIC_AGENT_SEND_RESP_TLV + 0x01)
#define WFA_TRAFFIC_AGENT_RECV_STOP_RESP_TLV	(WFA_TRAFFIC_AGENT_RECV_START_RESP_TLV + 0x01)
#define WFA_TRAFFIC_AGENT_RESET_RESP_TLV		(WFA_TRAFFIC_AGENT_RECV_STOP_RESP_TLV + 0x01)
#define WFA_TRAFFIC_AGENT_STATUS_RESP_TLV		(WFA_TRAFFIC_AGENT_RESET_RESP_TLV + 0x01)

/* STATION/DUT Responses */
#define WFA_STA_GET_IP_CONFIG_RESP_TLV			(WFA_TRAFFIC_AGENT_STATUS_RESP_TLV + 0x01)  
#define WFA_STA_SET_IP_CONFIG_RESP_TLV			(WFA_STA_GET_IP_CONFIG_RESP_TLV + 0x01)
#define WFA_STA_GET_MAC_ADDRESS_RESP_TLV		(WFA_STA_SET_IP_CONFIG_RESP_TLV + 0x01)
#define WFA_STA_SET_MAC_ADDRESS_RESP_TLV		(WFA_STA_GET_MAC_ADDRESS_RESP_TLV + 0x01) /* 47 */ 
#define WFA_STA_IS_CONNECTED_RESP_TLV			(WFA_STA_SET_MAC_ADDRESS_RESP_TLV + 0x01) 
#define WFA_STA_VERIFY_IP_CONNECTION_RESP_TLV	(WFA_STA_IS_CONNECTED_RESP_TLV + 0x01) /* 49 */
#define WFA_STA_GET_BSSID_RESP_TLV				(WFA_STA_VERIFY_IP_CONNECTION_RESP_TLV + 0x01)  /* 50 */
#define WFA_STA_GET_STATS_RESP_TLV				(WFA_STA_GET_BSSID_RESP_TLV + 0x01) 
#define WFA_STA_SET_ENCRYPTION_RESP_TLV			(WFA_STA_GET_STATS_RESP_TLV + 0x01)
#define WFA_STA_SET_PSK_RESP_TLV				(WFA_STA_SET_ENCRYPTION_RESP_TLV + 0x01)
#define WFA_STA_SET_EAPTLS_RESP_TLV				(WFA_STA_SET_PSK_RESP_TLV + 0x01)
#define WFA_STA_SET_UAPSD_RESP_TLV				(WFA_STA_SET_EAPTLS_RESP_TLV + 0x01)
#define WFA_STA_ASSOCIATE_RESP_TLV				(WFA_STA_SET_UAPSD_RESP_TLV + 0x01)
#define WFA_STA_SET_EAPTTLS_RESP_TLV			(WFA_STA_ASSOCIATE_RESP_TLV + 0x01)
#define WFA_STA_SET_EAPSIM_RESP_TLV				(WFA_STA_SET_EAPTTLS_RESP_TLV + 0x01)
#define WFA_STA_SET_PEAP_RESP_TLV				(WFA_STA_SET_EAPSIM_RESP_TLV + 0x01)
#define WFA_STA_SET_IBSS_RESP_TLV				(WFA_STA_SET_PEAP_RESP_TLV + 0x01)
#define WFA_STA_GET_INFO_RESP_TLV				(WFA_STA_SET_IBSS_RESP_TLV + 0x01)
#define WFA_DEVICE_GET_INFO_RESP_TLV			(WFA_STA_GET_INFO_RESP_TLV + 0x01)
#define WFA_DEVICE_LIST_IF_RESP_TLV				(WFA_DEVICE_GET_INFO_RESP_TLV + 0x01) 
#define WFA_STA_DEBUG_SET_RESP_TLV				(WFA_DEVICE_LIST_IF_RESP_TLV + 0x01)
#define WFA_STA_SET_MODE_RESP_TLV				(WFA_STA_DEBUG_SET_RESP_TLV + 0x01) /* 65 */
#define WFA_STA_UPLOAD_RESP_TLV					(WFA_STA_SET_MODE_RESP_TLV + 0x01)  /* 66 */
#define WFA_STA_SET_WMM_RESP_TLV				(WFA_STA_UPLOAD_RESP_TLV + 0x01)   /*67*/
#define WFA_STA_RESPONSE_END					(WFA_STA_SET_WMM_RESP_TLV + 0x01)
#define WFA_TLV_END								WFA_STA_RESPONSE_END 

// New STA/DUT commands
#define WFA_STA_NEW_COMMANDS_START			0x100 /* 256 */
#define WFA_STA_PRESET_PARAMETERS_TLV		(WFA_STA_NEW_COMMANDS_START + 0x01) // 257
#define WFA_STA_SET_EAPFAST_TLV				(WFA_STA_PRESET_PARAMETERS_TLV + 0x01)  /* 258 */
#define WFA_STA_SET_EAPAKA_TLV				(WFA_STA_SET_EAPFAST_TLV + 0x01)  /* 259 */
#define WFA_STA_SET_SYSTIME_TLV				(WFA_STA_SET_EAPAKA_TLV + 0x01)  /* 260 */
#define WFA_STA_SET_11N_TLV				    (WFA_STA_SET_SYSTIME_TLV + 0x01)  /* 261 */
#define WFA_STA_SET_WIRELESS_TLV			(WFA_STA_SET_11N_TLV + 0x01)  /* 262 */
#define WFA_STA_SEND_ADDBA_TLV				(WFA_STA_SET_WIRELESS_TLV + 0x01)  /* 263 */
#define WFA_STA_SEND_COEXIST_MGMT_TLV       (WFA_STA_SEND_ADDBA_TLV + 0x01)  /* 264 */
#define WFA_STA_SET_RIFS_TEST_TLV           (WFA_STA_SEND_COEXIST_MGMT_TLV +0x01)  /* 265 */
#define WFA_STA_RESET_DEFAULT_TLV           (WFA_STA_SET_RIFS_TEST_TLV + 0x01)  /* 266 */
#define WFA_STA_DISCONNECT_TLV              (WFA_STA_RESET_DEFAULT_TLV +0x01)   /* 267 */
#define WFA_STA_REASSOCIATE_TLV             (WFA_STA_DISCONNECT_TLV +0x01)      /* 268 */
#define WFA_STA_SET_PWRSAVE_TLV 	        (WFA_STA_REASSOCIATE_TLV + 0x01)    /* 269 WMMPS */
#define WFA_STA_SET_POWER_SAVE_TLV 	        (WFA_STA_SET_PWRSAVE_TLV + 0x01)    /* 270 legacy PS*/
#define WFA_STA_CLI_CMD_TLV					(WFA_STA_SET_POWER_SAVE_TLV + 0x01)    /* 271 */

#ifdef WFA_P2P
#define WFA_STA_GET_P2P_DEV_ADDRESS_TLV		(WFA_STA_CLI_CMD_TLV + 0x01)  /* 270 */
#define WFA_STA_SET_P2P_TLV					(WFA_STA_GET_P2P_DEV_ADDRESS_TLV + 0x01)  /* 271 */
#define WFA_STA_P2P_CONNECT_TLV				(WFA_STA_SET_P2P_TLV + 0x01)  /* 272 */
#define WFA_STA_P2P_JOIN_TLV				(WFA_STA_P2P_CONNECT_TLV + 0x01)  /* 273 */
#define WFA_STA_P2P_START_GRP_FORMATION_TLV	(WFA_STA_P2P_JOIN_TLV + 0x01)  /* 274 */
#define WFA_STA_P2P_DISSOLVE_TLV			(WFA_STA_P2P_START_GRP_FORMATION_TLV + 0x01)  /* 275 */
#define WFA_STA_SEND_P2P_INV_REQ_TLV		(WFA_STA_P2P_DISSOLVE_TLV + 0x01)  /* 276 */
#define WFA_STA_ACCEPT_P2P_INV_REQ_TLV		(WFA_STA_SEND_P2P_INV_REQ_TLV + 0x01)  /* 277 */
#define WFA_STA_SEND_P2P_PROV_DIS_REQ_TLV	(WFA_STA_ACCEPT_P2P_INV_REQ_TLV + 0x01)  /* 278 */
#define WFA_STA_SET_WPS_PBC_TLV				(WFA_STA_SEND_P2P_PROV_DIS_REQ_TLV + 0x01)  /* 279 */
#define WFA_STA_WPS_READ_PIN_TLV			(WFA_STA_SET_WPS_PBC_TLV + 0x01)  /* 280 */
#define WFA_STA_WPS_ENTER_PIN_TLV			(WFA_STA_WPS_READ_PIN_TLV + 0x01)  /* 281 */
#define WFA_STA_GET_PSK_TLV					(WFA_STA_WPS_ENTER_PIN_TLV + 0x01)  /* 282 */

#define WFA_STA_NEW_COMMANDS_END			(WFA_STA_GET_PSK_TLV + 0x01)
#else
#define WFA_STA_NEW_COMMANDS_END			(WFA_STA_CLI_CMD_TLV + 0x01)
#endif

//New STA/DUT command responses
#define WFA_STA_NEW_CMD_RESPONSE_START		0x200 /* 512 */
#define WFA_STA_PRESET_PARAMETERS_RESP_TLV	(WFA_STA_NEW_CMD_RESPONSE_START + 0x01)   /*513*/
#define WFA_STA_SET_EAPFAST_RESP_TLV		(WFA_STA_PRESET_PARAMETERS_RESP_TLV + 0x01)  /* 514 */
#define WFA_STA_SET_EAPAKA_RESP_TLV			(WFA_STA_SET_EAPFAST_RESP_TLV + 0x01)  /* 515 */
#define WFA_STA_SET_SYSTIME_RESP_TLV		(WFA_STA_SET_EAPAKA_RESP_TLV + 0x01)  /* 516 */
#define WFA_STA_SET_11N_RESP_TLV    		(WFA_STA_SET_SYSTIME_RESP_TLV + 0x01)  /* 517 */
#define WFA_STA_SET_WIRELESS_RESP_TLV		(WFA_STA_SET_11N_RESP_TLV + 0x01)  /* 518 */
#define WFA_STA_SET_SEND_ADDBA_RESP_TLV		(WFA_STA_SET_WIRELESS_RESP_TLV + 0x01)  /* 519 */
#define WFA_STA_SEND_COEXIST_MGMT_RESP_TLV  (WFA_STA_SET_SEND_ADDBA_RESP_TLV + 0x01)  /* 520 */
#define WFA_STA_SET_RIFS_TEST_RESP_TLV      (WFA_STA_SEND_COEXIST_MGMT_RESP_TLV +0x01)  /* 521 */
#define WFA_STA_RESET_DEFAULT_RESP_TLV      (WFA_STA_SET_RIFS_TEST_RESP_TLV + 0x01)     /* 522 */
#define WFA_STA_DISCONNECT_RESP_TLV         (WFA_STA_RESET_DEFAULT_RESP_TLV + 0x01)     /* 523 */
#define WFA_STA_REASSOCIATE_RESP_TLV        (WFA_STA_DISCONNECT_RESP_TLV + 0x01)        /* 524 */
#define WFA_STA_SET_PWRSAVE_RESP_TLV		(WFA_STA_REASSOCIATE_RESP_TLV + 0x01)       /* 525  */
#define WFA_STA_SET_POWER_SAVE_RESP_TLV		(WFA_STA_SET_PWRSAVE_RESP_TLV + 0x01)       /* 526, legacy PS  */ 
#define WFA_STA_CLI_CMD_RESP_TLV			(WFA_STA_SET_POWER_SAVE_RESP_TLV + 0x01)        /* 527 */

#ifdef WFA_P2P
#define WFA_STA_GET_P2P_DEV_ADDRESS_RESP_TLV	(WFA_STA_CLI_CMD_RESP_TLV + 0x01)  /* 525 */
#define WFA_STA_SET_P2P_RESP_TLV				(WFA_STA_GET_P2P_DEV_ADDRESS_RESP_TLV + 0x01)  /* 526 */
#define WFA_STA_P2P_CONNECT_RESP_TLV			(WFA_STA_SET_P2P_RESP_TLV + 0x01)  /* 527 */
#define WFA_STA_P2P_JOIN_RESP_TLV				(WFA_STA_P2P_CONNECT_RESP_TLV + 0x01)  /* 34 */
#define WFA_STA_P2P_START_GRP_FORM_RESP_TLV		(WFA_STA_P2P_JOIN_RESP_TLV + 0x01)  /* 34 */
#define WFA_STA_P2P_DISSOLVE_RESP_TLV			(WFA_STA_P2P_START_GRP_FORM_RESP_TLV + 0x01)  /* 34 */
#define WFA_STA_SEND_P2P_INV_REQ_RESP_TLV		(WFA_STA_P2P_DISSOLVE_RESP_TLV + 0x01)  /* 34 */
#define WFA_STA_ACCEPT_P2P_REQ_RESP_TLV			(WFA_STA_SEND_P2P_INV_REQ_RESP_TLV + 0x01)  /* 34 */
#define WFA_STA_SEND_P2P_PROV_DIS_REQ_RESP_TLV	(WFA_STA_ACCEPT_P2P_REQ_RESP_TLV + 0x01)  /* 34 */
#define WFA_STA_SET_WPS_PBC_RESP_TLV			(WFA_STA_SEND_P2P_PROV_DIS_REQ_RESP_TLV + 0x01)  /* 532 */
#define WFA_STA_WPS_READ_PIN_RESP_TLV			(WFA_STA_SET_WPS_PBC_RESP_TLV + 0x01)  /* 533 */
#define WFA_STA_WPS_ENTER_PIN_RESP_TLV			(WFA_STA_WPS_READ_PIN_RESP_TLV + 0x01)  /* 534 */
#define WFA_STA_GET_PSK_RESP_TLV				(WFA_STA_WPS_ENTER_PIN_RESP_TLV + 0x01)  /* 535 */
#define WFA_STA_NEW_CMD_RESPONSE_END			(WFA_STA_GET_PSK_RESP_TLV + 0x01)
#else
#define WFA_STA_NEW_CMD_RESPONSE_END 			(WFA_STA_CLI_CMD_RESP_TLV + 0x01)  /* 269 */
#endif

#define WFA_TLV_HEAD_LEN 1+2

extern WORD wfaGetTag(BYTE *tlv_data);
extern void wfaSetTag(BYTE *tlv_data, BYTE new_tag);
extern WORD wfaGetTLVLen(BYTE *tlv_data);
extern WORD wfaGetValueLen(BYTE *tlv_data);
extern BOOL wfaGetValue(BYTE *pstr, int value_len, BYTE *tlv_data);
extern BOOL wfaIsValidTag(BYTE the_tag);
extern void wfaAliasByTag(BYTE the_tag, char *aliasStr);
extern BOOL wfaDecodeTLV(BYTE *tlv_data, int tlv_len, WORD *ptlv_tag, int *ptlv_val_len, BYTE *ptlv_value);
extern BOOL wfaEncodeTLV(WORD the_tag, WORD the_len, BYTE *the_value, BYTE *tlv_data);
extern WORD wfaGetValueType(BYTE the_tag, BYTE *tlv_data);

#endif
